/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       John Schmidt                                              */
/*    Created:      Tue Nov 12 2019                                           */
/*    Description:  V5 project                                                */
/*                                                                            */
/*----------------------------------------------------------------------------*/
// Arcade Control
// This program uses remote control values to move the robot.
//
// Robot Configuration:
//
//
#include "vex.h"

using namespace vex;

// define your global instances of motors and other devices here
vex::motor LeftFront         = vex::motor( vex::PORT11 );
vex::motor LeftBack          = vex::motor( vex::PORT20 );
vex::motor RightFront         = vex::motor( vex::PORT1 );
vex::motor RightBack         = vex::motor( vex::PORT10 );
vex::motor ArmMotor           = vex::motor( vex::PORT5 );
vex::motor TrayMotor          = vex::motor( vex::PORT6 );
vex::motor LeftIntake         = vex::motor( vex::PORT2 );
vex::motor RightIntake        = vex::motor( vex::PORT9 );

vex::controller Controller1          = vex::controller();


int main() {
  vexcodeInit();
  
  while(1) {

    // Drive Control
    LeftFront.spin(vex::directionType::fwd, (Controller1.Axis1.value() + Controller1.Axis3.value())/2, vex::velocityUnits::pct);
    LeftBack.spin(vex::directionType::fwd, (Controller1.Axis1.value() + Controller1.Axis3.value())/2, vex::velocityUnits::pct);
    RightFront.spin(vex::directionType::fwd, (Controller1.Axis1.value() - Controller1.Axis3.value())/2, vex::velocityUnits::pct);
    RightBack.spin(vex::directionType::fwd, (Controller1.Axis1.value() - Controller1.Axis3.value())/2, vex::velocityUnits::pct);

    if(Controller1.ButtonA.pressing()){
      TrayMotor.startRotateTo(-20, vex::rotationUnits::rev, 30, vex::velocityUnits::pct);
    } else if(Controller1.ButtonB.pressing()){
      TrayMotor.startRotateTo(20, vex::rotationUnits::rev, 30, vex::velocityUnits::pct);
    } else {
      TrayMotor.stop(vex::brakeType::hold);
    }

    if(Controller1.ButtonL1.pressing()){
      ArmMotor.startRotateTo(25, vex::rotationUnits::rev, 100, vex::velocityUnits::pct);
    } else if(Controller1.ButtonL2.pressing()){
      ArmMotor.startRotateTo(-25, vex::rotationUnits::rev, 100, vex::velocityUnits::pct);
    } else {
      ArmMotor.stop(vex::brakeType::hold);
    }

    if(Controller1.ButtonR1.pressing()){
      LeftIntake.spin(vex::directionType::fwd, 100, vex::velocityUnits::pct);
      RightIntake.spin(vex::directionType::rev, 100, vex::velocityUnits::pct);
    } else if(Controller1.ButtonR2.pressing()){
      LeftIntake.spin(vex::directionType::rev, 100, vex::velocityUnits::pct);
      RightIntake.spin(vex::directionType::fwd, 100, vex::velocityUnits::pct);
    } else {
      LeftIntake.stop(vex::brakeType::hold);
      RightIntake.stop(vex::brakeType::hold);
    }

    // Sleep the task for a short amount of time to prevent wasted resources.
    vex::task::sleep(20);

  }
}
